{
    "finspec": "2.1",
    "info": {
        "version": "7.0",
        "issueDate": "2017-12-08",
        "liveDate": "2017-12-08",
        "issuer": "FixSpec",
        "title": "Quote Request Example",
        "status": "REVIEW"
    },
    "protocol": {
        "name": "FIX",
        "description": "FIX Protocol",
        "isFIX": true,
        "isOffsetBased": false,
        "isTagValue": true,
        "isBinary": false,
        "isObject": false,
        "hasHeader": true,
        "hasTrailer": true,
        "charset": "UTF8"
    },
    "datatypes": [
        {
            "name": "Amt",
            "baseType": "number",
            "description": "float field typically representing a Price times a Qty",
            "isBitField": false
        },
        {
            "name": "Boolean",
            "baseType": "char",
            "description": "Single character field containing either Y (Yes or True), or N (No or False)",
            "isBitField": false
        },
        {
            "name": "char",
            "baseType": "char",
            "description": "Single character value, can include any alphanumeric character or punctuation except the delimiter. All char fields are case sensitive (i.e. m != M).",
            "isBitField": false
        },
        {
            "name": "Country",
            "baseType": "string",
            "description": "ISO 3166 Country (2 character) code. See http://www.iso.org/iso/country_codes",
            "length": 2,
            "isBitField": false
        },
        {
            "name": "Currency",
            "baseType": "string",
            "description": "ISO 4217 Currency (3 character) code. See http://www.iso.org/iso/home/standards/currency_codes.htm",
            "length": 3,
            "isBitField": false
        },
        {
            "name": "data",
            "baseType": "string",
            "description": "string field containing raw data with no format or content restrictions. Data fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH).<br>Caution=> the value of one of these fields may contain the delimiter (SOH) character. Note that the value specified for this field should be followed by the delimiter (SOH) character as all fields are terminated with an 'SOH'.",
            "isBitField": false
        },
        {
            "name": "DayOfMonth",
            "baseType": "integer",
            "description": "int field representing a day during a particular monthy (values 1 to 31).",
            "isUnsigned": true,
            "isBitField": false
        },
        {
            "name": "Exchange",
            "baseType": "string",
            "description": "ISO 10383 Market Identifier Code (MIC). See http://www.iso15022.org/mic/homepagemic.htm",
            "isBitField": false
        },
        {
            "name": "float",
            "baseType": "number",
            "description": "Sequence of digits with optional decimal point and sign character; the absence of the decimal point within the string will be interpreted as the float representation of an integer value. All float fields must accommodate up to fifteen significant digits. The number of decimal places used should be a factor of business/market needs and mutual agreement between counterparties. Note that float values may contain leading zeros (e.g. '00023.23' = '23.23') and may contain or omit trailing zeros after the decimal point (e.g. '23.0' = '23.0000' = '23' = '23.').",
            "isBitField": false
        },
        {
            "name": "int",
            "baseType": "integer",
            "description": "Sequence of digits without commas or decimals and optional sign character. The sign character utilizes one byte (i.e. positive int is '99999' while negative int is '-99999'). Note that int values may contain leading zeros (e.g. '00023' = '23').",
            "isBitField": false,
            "examples": [
                {
                    "description": "<ul><li>723 in field 21 would be mapped int as |21=723|</li><li>-723 in field 12 would be mapped int as |12=-723|</li></ul>"
                }
            ]
        },
        {
            "name": "Language",
            "baseType": "string",
            "description": "ISO 639-1 language standard. See http://www.iso.org/iso/home/standards/language_codes.htm",
            "isBitField": false
        },
        {
            "name": "Length",
            "baseType": "integer",
            "description": "int field representing the length in bytes. Value must be positive.",
            "isUnsigned": true,
            "isBitField": false
        },
        {
            "name": "LocalMktDate",
            "baseType": "string",
            "description": "string field represening a Date of Local Market (as oppose to UTC) in YYYYMMDD format. This is the 'normal' date field used by the FIX Protocol.",
            "isBitField": false,
            "examples": [
                {
                    "description": "Valid values:<ul><li>YYYY = 0000-9999</li><li>MM = 01-12</li><li>DD = 01-31</li></ul>"
                }
            ]
        },
        {
            "name": "MonthYear",
            "baseType": "string",
            "description": "String field representing month of a year. An optional day of the month can be appended or an optional week code.",
            "isBitField": false,
            "examples": [
                {
                    "description": "Valid formats:<ol><li>YYYYMM</li><li>YYYYMMDD</li><li>YYYYMMWW</li></ol>Valid values:<ul><li>YYYY = 0000-9999</li><li>MM = 01-12</li><li>DD = 01-31</li><li>WW = w1, w2, w3, w4, w5</li></ul>"
                }
            ]
        },
        {
            "name": "MultipleCharValue",
            "baseType": "string",
            "description": "String field containing one or more space-delimited single character values",
            "isBitField": false,
            "examples": [
                {
                    "description": "<p>|18=2 A F|</p>"
                }
            ]
        },
        {
            "name": "MultipleStringValue",
            "baseType": "string",
            "description": "String field containing one or more space-delimited multiple character values",
            "isBitField": false,
            "examples": [
                {
                    "description": "<p>|277=AV AN A|</p>"
                }
            ]
        },
        {
            "name": "NumInGroup",
            "baseType": "integer",
            "description": "int field representing the number of entries in a repeating group. Value must be positive.",
            "isUnsigned": true,
            "isBitField": false
        },
        {
            "name": "Pattern",
            "baseType": "string",
            "description": "Used to build on and provide some restrictions on what is allowed as valid values in fields that uses a base FIX data type and a pattern data type. The universe of allowable valid values for the field would then be the union of the base set of valid values and what is defined by the pattern data type. The pattern data type used by the field will retain its base FIX data type (e.g. String, int, char).",
            "isBitField": false
        },
        {
            "name": "Percentage",
            "baseType": "number",
            "description": "float field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.",
            "isBitField": false
        },
        {
            "name": "Price",
            "baseType": "number",
            "description": "Float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions.",
            "isUnsigned": true,
            "isBitField": false
        },
        {
            "name": "PriceOffset",
            "baseType": "number",
            "description": "float field representing a price offset, which can be mathematically added to a 'Price'. Note the number of decimal places may vary and some fields such as LastForwardPoints may be negative.",
            "isBitField": false
        },
        {
            "name": "Qty",
            "baseType": "number",
            "description": "float field capable of storing either a whole number (no decimal places) of 'shares' (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "isBitField": false
        },
        {
            "name": "Reserved1000Plus",
            "baseType": "string",
            "description": "Values 1000 and above are reserved for bilaterally agreed upon user defined enumerations.",
            "isBitField": false
        },
        {
            "name": "Reserved100Plus",
            "baseType": "string",
            "description": "Values 100 and above are reserved for bilaterally agreed upon user defined enumerations.",
            "isBitField": false
        },
        {
            "name": "Reserved4000Plus",
            "baseType": "string",
            "description": "Values 4000 and above are reserved for bilaterally agreed upon user defined enumerations.",
            "isBitField": false
        },
        {
            "name": "SeqNum",
            "baseType": "integer",
            "description": "int field representing a message sequence number. Value must be positive.",
            "isUnsigned": true,
            "isBitField": false
        },
        {
            "name": "String",
            "baseType": "string",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "isUnsigned": false,
            "isBitField": false
        },
        {
            "name": "TagNum",
            "baseType": "integer",
            "description": "int field representing a field's tag number when using FIX 'Tag = Value' syntax. Value must be positive and may not contain leading zeros.",
            "isUnsigned": true,
            "isBitField": false
        },
        {
            "name": "Tenor",
            "baseType": "string",
            "description": "used to allow the expression of FX standard tenors in addition to the base valid enumerations defined for the field that uses this pattern data type. This pattern data type is defined as follows:<br>Dx = tenor expression for 'days', e.g. 'D5', where 'x' is any integer > 0<br>Mx = tenor expression for 'months', e.g. 'M3', where 'x' is any integer > 0<br>Wx = tenor expression for 'weeks', e.g. 'W13', where 'x' is any integer > 0<br>Yx = tenor expression for 'years', e.g. 'Y1', where 'x' is any integer > 0",
            "isBitField": false
        },
        {
            "name": "TZTimeOnly",
            "baseType": "string",
            "description": "String field representing the time represented based on ISO 8601. This is the time with a UTC offset to allow identification of local time and timezone of that time. Format is HH=>MM[=>SS][Z | [ + | - hh[=>mm]]] where HH = 00-23 hours, MM = 00-59 minutes, SS = 00-59 seconds, hh = 01-12 offset hours, mm = 00-59 offset minutes.",
            "isBitField": false,
            "examples": [
                {
                    "description": "<ul><li>02:39-05 = five hours behind UTC (Eastern Standard Time)</li><li>15:39+08 = eight hours ahead of UTC (Hong Kong/Singapore time)</li><li>13:09+05:30 = 5.5 hours ahead of UTC (India Standard time)</li></ul>"
                }
            ]
        },
        {
            "name": "TZTimestamp",
            "baseType": "string",
            "description": "string field representing a time/date combination representing local time with an offset to UTC to allow identification of local time and timezone offset of that time. The representation is based on ISO 8601.<br>Format is YYYYMMDD-HH=>MM=>SS[Z | [ + | - hh[=>mm]]] where YYYY = 0000 to 9999, MM = 01-12, DD = 01-31 HH = 00-23 hours, MM = 00-59 minutes, SS = 00-59 seconds, hh = 01-12 offset hours, mm = 00-59 offset minutes<br>Examples:<br>20060901-07:39Z is 07:39 UTC on 1st of September 2006<br>20060901-02:39-05 is five hours behind UTC, thus Eastern Time on 1st of September 2006<br>20060901-15:39+08 is eight hours ahead of UTC, Hong Kong/Singapore time on 1st of September 2006<br>20060901-13:09+05:30 is 5.5 hours ahead of UTC, India time on 1st of September 2006",
            "isBitField": false
        },
        {
            "name": "UTCDateOnly",
            "baseType": "string",
            "description": "String field representing Date represented in UTC (Universal Time Coordinated, also known as 'GMT') in YYYYMMDD format. This special-purpose field is paired with UTCTimeOnly to form a proper UTCTimestamp for bandwidth-sensitive messages.",
            "isBitField": false,
            "examples": [
                {
                    "description": "Valid values:<ul><li>YYYY = 0000-9999</li><li>MM = 01-12</li><li>DD = 01-31</li></ul>"
                }
            ]
        },
        {
            "name": "UTCTimeOnly",
            "baseType": "string",
            "description": "String field representing Time-only represented in UTC (Universal Time Coordinated, also known as 'GMT') in either HH:MM:SS (whole seconds) or HH:MM:SS.sss (milliseconds). This special-purpose field is paired with UTCDateOnly to form a proper UTCTimestamp for bandwidth-sensitive messages.",
            "isBitField": false,
            "examples": [
                {
                    "description": "Valid values:<ul><li>HH = 00-23</li><li>MM = 00-59</li><li>SS = 00-60 (60 only if UTC leap second)</li><li>sss = 000-999</li></ul>"
                }
            ]
        },
        {
            "name": "UTCTimestamp",
            "baseType": "string",
            "description": "String field representing Time/date combination represented in UTC (Universal Time Coordinated, also known as 'GMT') in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss (milliseconds). Note that UTC includes corrections for leap seconds as declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read '19981231-23:59:59', '19981231-23:59:60', '19990101-00:00:00'",
            "isBitField": false,
            "pattern": "20(1|2)[0-9](0[0-9]|1(1-2)-((0|1)[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9]{3}",
            "examples": [
                {
                    "description": "Valid values:<ul><li>YYYY = 0000-9999</li><li>MM = 01-12</li><li>DD = 01-31</li><li>HH = 00-23</li><li>MM = 00-59</li><li>SS = 00-60 (60 only if UTC leap second)</li><li>sss = 000-999</li></ul>"
                }
            ]
        },
        {
            "name": "XMLData",
            "baseType": "string",
            "description": "Contains an XML document raw data with no format or content restrictions. XMLData fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH).",
            "isBitField": false
        }
    ],
    "changes": {
        "summary": "No details provided",
        "lastVersion": "7.0",
        "lastVersionDate": "2017-12-08"
    },
    "nav": {
        "technical": {
            "Session": {
                "items": [
                    {
                        "key": "OZWzk7p0",
                        "name": "Heartbeat"
                    },
                    {
                        "key": "tZ2JWE0c",
                        "name": "TestRequest"
                    },
                    {
                        "key": "tio0vjKC",
                        "name": "ResendRequest"
                    },
                    {
                        "key": "bDQIJPkq",
                        "name": "Reject"
                    },
                    {
                        "key": "UTnUGGU6",
                        "name": "SequenceReset"
                    },
                    {
                        "key": "2irN079n",
                        "name": "Logout"
                    },
                    {
                        "key": "PKne5tBh",
                        "name": "Logon"
                    }
                ]
            },
            "Quotes": {
                "items": [
                    {
                        "key": "QhYCGmlh",
                        "name": "Quote Cancel Message"
                    },
                    {
                        "key": "d5Fr1B1l",
                        "name": "Quote Request Reject"
                    },
                    {
                        "key": "8mF7jFju",
                        "name": "Quote"
                    },
                    {
                        "key": "KBfFbiqQ",
                        "name": "Quote Request"
                    }
                ]
            }
        },
        "block": {
            "Core": {
                "items": [
                    {
                        "key": "CSFKK2JK",
                        "name": "StandardHeader"
                    },
                    {
                        "key": "abU5YDSp",
                        "name": "StandardTrailer"
                    }
                ]
            }
        }
    },
    "blocks": {
        "CSFKK2JK": {
            "name": "StandardHeader",
            "direction": "both",
            "description": "The standard FIX message header",
            "fields": [
                {
                    "position": 0,
                    "name": "BeginString",
                    "alwaysRequired": true,
                    "datatype": "String",
                    "description": "",
                    "wireId": "8",
                    "values": [
                        {
                            "wireValue": "FIX.4.3",
                            "name": "FIX 4.3"
                        }
                    ]
                },
                {
                    "position": 1,
                    "name": "BodyLength",
                    "alwaysRequired": true,
                    "datatype": "Length",
                    "description": "The message length in bytes",
                    "wireId": "9"
                },
                {
                    "position": 2,
                    "name": "MsgType",
                    "alwaysRequired": true,
                    "datatype": "String",
                    "description": "The message type code",
                    "wireId": "35"
                },
                {
                    "position": 3,
                    "name": "OnBehalfOfSubID",
                    "alwaysRequired": false,
                    "datatype": "String",
                    "description": "",
                    "wireId": "116"
                },
                {
                    "position": 4,
                    "name": "TargetSubID",
                    "alwaysRequired": false,
                    "datatype": "String",
                    "description": "",
                    "wireId": "57"
                },
                {
                    "position": 5,
                    "name": "SenderCompID",
                    "alwaysRequired": true,
                    "datatype": "String",
                    "description": "Used to identify the message sender.",
                    "wireId": "49"
                },
                {
                    "position": 6,
                    "name": "SenderSubID",
                    "alwaysRequired": false,
                    "datatype": "String",
                    "description": "",
                    "wireId": "50"
                },
                {
                    "position": 7,
                    "name": "OrigSendingTime",
                    "alwaysRequired": false,
                    "datatype": "UTCTimestamp",
                    "description": "Original time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as \"GMT\") when transmitting orders as the result of a resend request.",
                    "wireId": "122"
                },
                {
                    "position": 8,
                    "name": "MsgSeqNum",
                    "alwaysRequired": true,
                    "datatype": "SeqNum",
                    "description": "The message sequence number",
                    "wireId": "34"
                },
                {
                    "position": 9,
                    "name": "TargetCompID",
                    "alwaysRequired": true,
                    "datatype": "String",
                    "description": "Used to identify the message recipient.",
                    "wireId": "56"
                },
                {
                    "position": 10,
                    "name": "PossResend",
                    "alwaysRequired": false,
                    "datatype": "Boolean",
                    "description": "Populated when there is a chance that the message is a duplicate of a message sent under a different sequence number",
                    "wireId": "97",
                    "values": [
                        {
                            "wireValue": "N",
                            "name": "Original transmission"
                        },
                        {
                            "wireValue": "Y",
                            "name": "Resent"
                        }
                    ]
                },
                {
                    "position": 11,
                    "name": "SendingTime",
                    "alwaysRequired": true,
                    "datatype": "UTCTimestamp",
                    "description": "The time of message transmission, in UTC.",
                    "wireId": "52"
                },
                {
                    "position": 12,
                    "name": "OnBehalfOfCompID",
                    "alwaysRequired": false,
                    "datatype": "String",
                    "description": "",
                    "wireId": "115"
                },
                {
                    "position": 13,
                    "name": "PossDupFlag",
                    "alwaysRequired": false,
                    "datatype": "Boolean",
                    "description": "Populated for retransmitted messages",
                    "wireId": "43",
                    "values": [
                        {
                            "wireValue": "N",
                            "name": "Original transmission"
                        },
                        {
                            "wireValue": "Y",
                            "name": "Possible duplicate"
                        }
                    ]
                }
            ],
            "historyKey": "HO6Gb0Gx",
            "isHeader": true
        },
        "abU5YDSp": {
            "name": "StandardTrailer",
            "direction": "both",
            "description": "The standard FIX message trailer",
            "fields": [
                {
                    "position": 0,
                    "name": "CheckSum",
                    "alwaysRequired": true,
                    "datatype": "String",
                    "description": "3 byte checksum calculated in accordance with the FIX specification.",
                    "wireId": "10"
                }
            ],
            "historyKey": "0d1tTlmC",
            "isTrailer": true
        }
    },
    "messages": {
        "technical": {
            "OZWzk7p0": {
                "name": "Heartbeat",
                "direction": "both",
                "description": "Monitor connection status.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "TestReqID",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Must be populated when the heartbeat is a response to a TestRequest message.",
                        "wireId": "112"
                    },
                    {
                        "position": 2,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "IhKBV9yv",
                "isSession": true,
                "wireId": "0"
            },
            "tZ2JWE0c": {
                "name": "TestRequest",
                "direction": "both",
                "description": "Inquire connection status.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "TestReqID",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Test request id. Any string can be used.",
                        "wireId": "112"
                    },
                    {
                        "position": 2,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "ZguKVcIN",
                "isSession": true,
                "wireId": "1"
            },
            "tio0vjKC": {
                "name": "ResendRequest",
                "direction": "both",
                "description": "Fill in message gaps.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "BeginSeqNo",
                        "alwaysRequired": true,
                        "datatype": "SeqNum",
                        "description": "Sequence number of the first message requested to be resent",
                        "wireId": "7"
                    },
                    {
                        "position": 2,
                        "name": "EndSeqNo",
                        "alwaysRequired": true,
                        "datatype": "SeqNum",
                        "description": "Sequence number of the last message requested to be resent, or zero if all messages subsequent to BeginSeqNo are to be resent.",
                        "wireId": "16"
                    },
                    {
                        "position": 3,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "oP5t7V3t",
                "isSession": true,
                "wireId": "2"
            },
            "bDQIJPkq": {
                "name": "Reject",
                "direction": "both",
                "description": "Reject a single invalid message.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "RefSeqNum",
                        "alwaysRequired": true,
                        "datatype": "SeqNum",
                        "description": "The sequence number of the rejected message",
                        "wireId": "45"
                    },
                    {
                        "position": 2,
                        "name": "RefTagID",
                        "alwaysRequired": false,
                        "datatype": "int",
                        "description": "The tag number of the FIX field being referenced",
                        "wireId": "371"
                    },
                    {
                        "position": 3,
                        "name": "RefMsgType",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "The type code for the message being referenced",
                        "wireId": "372"
                    },
                    {
                        "position": 4,
                        "name": "SessionRejectReason",
                        "alwaysRequired": false,
                        "datatype": "int",
                        "description": "Code to identify the reason for a session level reject message, if appropriate",
                        "wireId": "373",
                        "values": [
                            {
                                "wireValue": 12,
                                "name": "XML Validation error"
                            },
                            {
                                "wireValue": 17,
                                "name": "Non data value includes field delimiter (SOH character)"
                            },
                            {
                                "wireValue": 16,
                                "name": "Incorrect NumInGroup count for repeating group"
                            },
                            {
                                "wireValue": 15,
                                "name": "Repeating group fields out of order"
                            },
                            {
                                "wireValue": 14,
                                "name": "Tag specified out of required order"
                            },
                            {
                                "wireValue": 11,
                                "name": "Invalid MsgType"
                            },
                            {
                                "wireValue": 0,
                                "name": "Invalid tag number"
                            },
                            {
                                "wireValue": 9,
                                "name": "CompID problem"
                            },
                            {
                                "wireValue": 8,
                                "name": "Signature problem"
                            },
                            {
                                "wireValue": 7,
                                "name": "Decryption problem"
                            },
                            {
                                "wireValue": 6,
                                "name": "Incorrect data format for value"
                            },
                            {
                                "wireValue": 5,
                                "name": "Value is incorrect (out of range) for this tag"
                            },
                            {
                                "wireValue": 4,
                                "name": "Tag specified without a value"
                            },
                            {
                                "wireValue": 3,
                                "name": "Undefined Tag"
                            },
                            {
                                "wireValue": 10,
                                "name": "SendingTime accuracy problem"
                            },
                            {
                                "wireValue": 13,
                                "name": "Tag appears more than once"
                            },
                            {
                                "wireValue": 2,
                                "name": "Tag not defined for this message type"
                            },
                            {
                                "wireValue": 1,
                                "name": "Required tag missing"
                            }
                        ]
                    },
                    {
                        "position": 5,
                        "name": "Text",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Message to explain the reason for rejection, where possible",
                        "wireId": "58"
                    },
                    {
                        "position": 6,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "fUVdrFQ3",
                "isSession": true,
                "wireId": "3"
            },
            "UTnUGGU6": {
                "name": "SequenceReset",
                "direction": "both",
                "description": "Resynchronize sequence numbers.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "GapFillFlag",
                        "alwaysRequired": false,
                        "datatype": "Boolean",
                        "description": "Used to indicate that message is being used in gap-fill-mode",
                        "wireId": "123",
                        "values": [
                            {
                                "wireValue": "Y",
                                "name": "Gap Fill message, MsgSeqNum field valid"
                            },
                            {
                                "wireValue": "N",
                                "name": "Sequence Reset, ignore MsgSeqNum"
                            }
                        ]
                    },
                    {
                        "position": 2,
                        "name": "NewSeqNo",
                        "alwaysRequired": true,
                        "datatype": "SeqNum",
                        "description": "The new next message sequence number to be used.",
                        "wireId": "36"
                    },
                    {
                        "position": 3,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "oRRMY8ta",
                "isSession": true,
                "wireId": "4"
            },
            "2irN079n": {
                "name": "Logout",
                "direction": "both",
                "description": "Closing of a connection to the system is initiated by sending a Logout message to the other party. This should then be acknowledged by the other party by replying with a Logout message.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "Text",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "Will be populated in the event of an exchange-initiated disconnection to provide a reason for the disconnection.",
                        "wireId": "58"
                    },
                    {
                        "position": 2,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "taLnwlCW",
                "isSession": true,
                "wireId": "5"
            },
            "PKne5tBh": {
                "name": "Logon",
                "direction": "both",
                "description": "Establish connection, trigger message sequence number reset.Connection to the system is initiated by the client issuing a FIX Logon message. The message must contain the password that has been issued to the client by us. In the event of an incorrect password being specified, a Logout message containing an error message will be sent in response, and then the connection will be terminated immediately.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "EncryptMethod",
                        "alwaysRequired": true,
                        "datatype": "int",
                        "description": "",
                        "wireId": "98",
                        "values": [
                            {
                                "wireValue": 0,
                                "name": "None"
                            }
                        ]
                    },
                    {
                        "position": 2,
                        "name": "HeartBtInt",
                        "alwaysRequired": true,
                        "datatype": "int",
                        "description": "The heartbeat interval.",
                        "wireId": "108"
                    },
                    {
                        "position": 3,
                        "name": "ResetSeqNumFlag",
                        "alwaysRequired": false,
                        "datatype": "Boolean",
                        "description": "Indicates both sides of the FIX session should reset sequence numbers. Should only be specified when this message is sent to instruct a sequence number reset.",
                        "wireId": "141",
                        "values": [
                            {
                                "wireValue": "Y",
                                "name": "Yes, reset sequence numbers"
                            },
                            {
                                "wireValue": "N",
                                "name": "No"
                            }
                        ]
                    },
                    {
                        "position": 4,
                        "name": "Username",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "This should be set for messages sent by the client, to initiate a connection. Not needed for messages used only to reset sequence numbers for an existing connection.",
                        "wireId": "553"
                    },
                    {
                        "position": 5,
                        "name": "Password",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "This should be set for messages sent by the client, to initiate a connection. Not needed for messages used only to reset sequence numbers for an existing connection.",
                        "wireId": "554"
                    },
                    {
                        "position": 6,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "nFxmFZan",
                "isSession": true,
                "wireId": "A"
            },
            "qdmCfuBx": {
                "name": "BusinessMessageReject",
                "direction": "both",
                "description": "Used to reject an invalid Don’t Know Trade message.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "RefSeqNum",
                        "alwaysRequired": false,
                        "datatype": "SeqNum",
                        "description": "The sequence number of the rejected message",
                        "wireId": "45"
                    },
                    {
                        "position": 2,
                        "name": "RefMsgType",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "The type code for the message being rejected",
                        "wireId": "372"
                    },
                    {
                        "position": 3,
                        "name": "BusinessRejectRefID",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "The \"business-level\" ID field for the message being rejected. For a Don’t Know Trade message, this will be the ExecID field.",
                        "wireId": "379"
                    },
                    {
                        "position": 4,
                        "name": "BusinessRejectReason",
                        "alwaysRequired": true,
                        "datatype": "int",
                        "description": "Code to identify the reason for the rejection.",
                        "wireId": "380",
                        "values": [
                            {
                                "wireValue": 3,
                                "name": "Unsupported message type"
                            },
                            {
                                "wireValue": 7,
                                "name": "DeliverTo firm not available at this time"
                            },
                            {
                                "wireValue": 4,
                                "name": "Market is not available"
                            },
                            {
                                "wireValue": 6,
                                "name": "Not Authorized"
                            },
                            {
                                "wireValue": 0,
                                "name": "Other (by default)"
                            },
                            {
                                "wireValue": 5,
                                "name": "Conditionally required field missing (if conditional or mandatory field is missing)"
                            },
                            {
                                "wireValue": 1,
                                "name": "Unkown ID"
                            },
                            {
                                "wireValue": 2,
                                "name": "Unknown security"
                            }
                        ]
                    },
                    {
                        "position": 5,
                        "name": "Text",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "This will contain an error message indicating the nature of the problem.",
                        "wireId": "58"
                    },
                    {
                        "position": 6,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "7OnC26hQ",
                "wireId": "j"
            },
            "QhYCGmlh": {
                "name": "Quote Cancel Message",
                "direction": "both",
                "description": "\n\tUsed by client to cancel RFS stream\n\tUsed to indicate end of RFS stream\n",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "QuoteReqID",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Unique identifier for quote request",
                        "wireId": "131",
                        "length": 0
                    },
                    {
                        "position": 2,
                        "name": "QuoteCancelType",
                        "alwaysRequired": true,
                        "datatype": "int",
                        "description": "",
                        "wireId": "298",
                        "values": [
                            {
                                "wireValue": 4,
                                "name": "Cancel All Quotes"
                            }
                        ]
                    },
                    {
                        "position": 3,
                        "name": "Symbol",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "\"CCY1/CCY2\" This will match the symbol provided in the Quote Request ",
                        "wireId": "55"
                    },
                    {
                        "position": 4,
                        "name": "Text",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "",
                        "wireId": "58"
                    },
                    {
                        "position": 5,
                        "name": "BaseCcyDeliveryLocationType",
                        "alwaysRequired": false,
                        "datatype": "char",
                        "description": "",
                        "wireId": "9102",
                        "values": [
                            {
                                "wireValue": "R",
                                "name": "Default"
                            },
                            {
                                "wireValue": "N",
                                "name": "Onshore"
                            },
                            {
                                "wireValue": "O",
                                "name": "Offshore"
                            }
                        ]
                    },
                    {
                        "position": 6,
                        "name": "CounterCcyDeliveryLocationType",
                        "alwaysRequired": false,
                        "datatype": "char",
                        "description": "",
                        "wireId": "9103",
                        "values": [
                            {
                                "wireValue": "R",
                                "name": "Default"
                            },
                            {
                                "wireValue": "N",
                                "name": "Onshore"
                            },
                            {
                                "wireValue": "O",
                                "name": "Offshore"
                            }
                        ]
                    },
                    {
                        "position": 7,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "dj65ktGi",
                "wireId": "Z"
            },
            "d5Fr1B1l": {
                "name": "Quote Request Reject",
                "direction": "out",
                "description": "To reject a quote request.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "QuoteReqID",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Will refer to the client-provided identifier supplied in the Quote Request message.",
                        "wireId": "131",
                        "length": 0
                    },
                    {
                        "position": 2,
                        "name": "QuoteRequestRejectReason",
                        "alwaysRequired": true,
                        "datatype": "int",
                        "description": "Note that the Text field is used to give the reason for the rejection.",
                        "wireId": "658",
                        "values": [
                            {
                                "wireValue": 99,
                                "name": "Other"
                            }
                        ]
                    },
                    {
                        "position": 3,
                        "name": "NoRelatedSym",
                        "alwaysRequired": true,
                        "datatype": "NumInGroup",
                        "description": "Number of symbols (instruments) requested in the Quote Request message.",
                        "wireId": "146",
                        "length": 0,
                        "values": [
                            {
                                "wireValue": 1,
                                "name": "One"
                            }
                        ],
                        "fields": [
                            {
                                "position": 0,
                                "name": "Symbol",
                                "alwaysRequired": true,
                                "datatype": "String",
                                "description": "\"CCY1/CCY2\". This will match the symbol provided in the Quote Request",
                                "wireId": "55"
                            },
                            {
                                "position": 1,
                                "name": "CFICode",
                                "alwaysRequired": false,
                                "datatype": "String",
                                "description": "Will match the CFICode specified in the QuoteRequest",
                                "wireId": "461",
                                "length": 0,
                                "values": [
                                    {
                                        "wireValue": "FFCPNO",
                                        "name": "Forward Outright (deliverable)"
                                    },
                                    {
                                        "wireValue": "FFCNNO",
                                        "name": "Non-deliverable forward (NDF)"
                                    },
                                    {
                                        "wireValue": "FFCPNW",
                                        "name": "Swap"
                                    },
                                    {
                                        "wireValue": "RCSXXX",
                                        "name": "Spot"
                                    },
                                    {
                                        "wireValue": "FFCNNW",
                                        "name": "Non-deliverable swap"
                                    }
                                ]
                            },
                            {
                                "position": 2,
                                "name": "SecurityID",
                                "alwaysRequired": false,
                                "datatype": "String",
                                "description": "Valor for Precious Metals",
                                "wireId": "48"
                            },
                            {
                                "position": 3,
                                "name": "SecurityIDSource",
                                "alwaysRequired": false,
                                "datatype": "String",
                                "description": "",
                                "wireId": "22",
                                "values": [
                                    {
                                        "wireValue": "D",
                                        "name": "Valoren"
                                    }
                                ]
                            },
                            {
                                "position": 4,
                                "name": "BaseCcyDeliveryLocationType",
                                "alwaysRequired": false,
                                "datatype": "char",
                                "description": "",
                                "wireId": "9102",
                                "values": [
                                    {
                                        "wireValue": "R",
                                        "name": "Default"
                                    },
                                    {
                                        "wireValue": "N",
                                        "name": "Onshore"
                                    },
                                    {
                                        "wireValue": "O",
                                        "name": "Offshore"
                                    }
                                ]
                            },
                            {
                                "position": 5,
                                "name": "CounterCcyDeliveryLocationType",
                                "alwaysRequired": false,
                                "datatype": "char",
                                "description": "",
                                "wireId": "9103",
                                "values": [
                                    {
                                        "wireValue": "R",
                                        "name": "Default"
                                    },
                                    {
                                        "wireValue": "N",
                                        "name": "Onshore"
                                    },
                                    {
                                        "wireValue": "O",
                                        "name": "Offshore"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "position": 4,
                        "name": "OrderQty",
                        "alwaysRequired": true,
                        "datatype": "Qty",
                        "description": "The order quantity, as specified in the Quote Request.",
                        "wireId": "38"
                    },
                    {
                        "position": 5,
                        "name": "OrderQty2",
                        "alwaysRequired": false,
                        "datatype": "Qty",
                        "description": "Far leg swap quantity, as specified in the Quote Request.",
                        "wireId": "192",
                        "length": 0
                    },
                    {
                        "position": 6,
                        "name": "SettlmntTyp",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "Tenor code as specified in Quote Request.",
                        "wireId": "63",
                        "length": 0
                    },
                    {
                        "position": 7,
                        "name": "FutSettDate",
                        "alwaysRequired": false,
                        "datatype": "LocalMktDate",
                        "description": "The value date of a forward or near leg of a swap, as specified in the Quote Request.",
                        "wireId": "64",
                        "length": 0
                    },
                    {
                        "position": 8,
                        "name": "SettlmntTyp2",
                        "alwaysRequired": false,
                        "datatype": "Tenor",
                        "description": "Tenor code as specified in Quote Request.",
                        "wireId": "6600"
                    },
                    {
                        "position": 9,
                        "name": "FutSettDate2",
                        "alwaysRequired": false,
                        "datatype": "LocalMktDate",
                        "description": "The value date of a far leg of a swap, as specified in the Quote Request.",
                        "wireId": "193",
                        "length": 0
                    },
                    {
                        "position": 10,
                        "name": "Currency",
                        "alwaysRequired": false,
                        "datatype": "Currency",
                        "description": "The currency specified in the Quote Request, if one was present.",
                        "wireId": "15",
                        "length": 3
                    },
                    {
                        "position": 11,
                        "name": "Text",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "This will contain a message indicating the reason for rejection of the Quote Request.",
                        "wireId": "58"
                    },
                    {
                        "position": 12,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "Hlvgffke",
                "wireId": "AG"
            },
            "8mF7jFju": {
                "name": "Quote",
                "direction": "both",
                "description": "To provide a quoted price for an FX product.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "QuoteReqID",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Will refer to the client-provided identifier supplied in the Quote Request message.",
                        "wireId": "131",
                        "length": 0
                    },
                    {
                        "position": 2,
                        "name": "QuoteID",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Unique reference for this quote message.",
                        "wireId": "117"
                    },
                    {
                        "position": 3,
                        "name": "Symbol",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "\"CCY1/CCY2\". This will match the symbol provided in the Quote Request",
                        "wireId": "55"
                    },
                    {
                        "position": 4,
                        "name": "CFICode",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Will match the CFICode specified in the QuoteRequest .",
                        "wireId": "461",
                        "length": 0,
                        "values": [
                            {
                                "wireValue": "FFCPNO",
                                "name": "Forward Outright (deliverable)"
                            },
                            {
                                "wireValue": "FFCNNO",
                                "name": "Non-deliverable forward (NDF)"
                            },
                            {
                                "wireValue": "FFCPNW",
                                "name": "Swap"
                            },
                            {
                                "wireValue": "RCSXXX",
                                "name": "Spot"
                            },
                            {
                                "wireValue": "FFCNNW",
                                "name": "Non-deliverable swap"
                            }
                        ]
                    },
                    {
                        "position": 5,
                        "name": "SecurityID",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "Valor for Precious Metals. Requires SecurityIDSource. Needs to match the Symbol specified in Tag 55",
                        "wireId": "48"
                    },
                    {
                        "position": 6,
                        "name": "SecurityIDSource",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "",
                        "wireId": "22",
                        "values": [
                            {
                                "wireValue": "D",
                                "name": "Valoren"
                            }
                        ]
                    },
                    {
                        "position": 7,
                        "name": "BaseCcyDeliveryLocationType",
                        "alwaysRequired": false,
                        "datatype": "char",
                        "description": "",
                        "wireId": "9102",
                        "values": [
                            {
                                "wireValue": "R",
                                "name": "Default"
                            },
                            {
                                "wireValue": "N",
                                "name": "Onshore"
                            },
                            {
                                "wireValue": "O",
                                "name": "Offshore"
                            }
                        ]
                    },
                    {
                        "position": 8,
                        "name": "CounterCcyDeliveryLocationType",
                        "alwaysRequired": false,
                        "datatype": "char",
                        "description": "",
                        "wireId": "9103",
                        "values": [
                            {
                                "wireValue": "R",
                                "name": "Default"
                            },
                            {
                                "wireValue": "N",
                                "name": "Onshore"
                            },
                            {
                                "wireValue": "O",
                                "name": "Offshore"
                            }
                        ]
                    },
                    {
                        "position": 9,
                        "name": "MaturityDate",
                        "alwaysRequired": false,
                        "datatype": "UTCDateOnly",
                        "description": "NDF Fixing Date or ND Swap near leg Fixing Date\n\nOnly sent for ND Swap messages (CFICode=FFCNNO) or ND Swap messages (CFICode=FFCNNW) whn requested on a Quote Request Message with RequestFixingInfo=Y",
                        "wireId": "541",
                        "length": 0
                    },
                    {
                        "position": 10,
                        "name": "MaturityDate2",
                        "alwaysRequired": false,
                        "datatype": "UTCDateOnly",
                        "description": "ND Swap far leg Fixing DateOnly sent for ND Swap messages (CFICode=FFCNNO) or ND Swap messages (CFICode=FFCNNW) when requested on a Quote Request Message with RequestFixingInfo=Y",
                        "wireId": "7541"
                    },
                    {
                        "position": 11,
                        "name": "FixingReference",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "Used to specify the required fixing procedure of an NDF.\n\nSee Appendix 7.17 for valid values\n\nOnly valid for NDF messages (CFICode = FFCNNO)\n\nMandatory only for ND crosses",
                        "wireId": "7075"
                    },
                    {
                        "position": 12,
                        "name": "ValidUnilTime",
                        "alwaysRequired": true,
                        "datatype": "UTCTimestamp",
                        "description": "UTC Timestamp for validity of the quote",
                        "wireId": "62"
                    },
                    {
                        "position": 13,
                        "name": "BidPx",
                        "alwaysRequired": true,
                        "datatype": "Price",
                        "description": "The bid \"all-in\" forward rate. For a swap, the BUY quote near leg rate. For spots, the BidSpotRate.",
                        "wireId": "132",
                        "length": 0
                    },
                    {
                        "position": 14,
                        "name": "OfferPx",
                        "alwaysRequired": true,
                        "datatype": "Price",
                        "description": "The offer \"all-in\" forward rate. For a swap, the SELL quote near leg rate. For spots, the OfferSpotRate.",
                        "wireId": "133",
                        "length": 0
                    },
                    {
                        "position": 15,
                        "name": "BidSize",
                        "alwaysRequired": true,
                        "datatype": "Qty",
                        "description": "Indicates the bid size",
                        "wireId": "134",
                        "length": 0
                    },
                    {
                        "position": 16,
                        "name": "OfferSize",
                        "alwaysRequired": true,
                        "datatype": "Qty",
                        "description": "Indicates the offer size",
                        "wireId": "135",
                        "length": 0
                    },
                    {
                        "position": 17,
                        "name": "BidSpotRate",
                        "alwaysRequired": true,
                        "datatype": "Price",
                        "description": "The bid spot rate. For a swap, the spot rate supporting the BUY quote",
                        "wireId": "188",
                        "length": 0
                    },
                    {
                        "position": 18,
                        "name": "OfferSpotRate",
                        "alwaysRequired": true,
                        "datatype": "Price",
                        "description": "The offer spot rate. For a swap, the spot rate supporting the SELL quote",
                        "wireId": "190",
                        "length": 0
                    },
                    {
                        "position": 19,
                        "name": "BidForwardPoints",
                        "alwaysRequired": false,
                        "datatype": "PriceOffset",
                        "description": "The bid forward points",
                        "wireId": "189"
                    },
                    {
                        "position": 20,
                        "name": "BidForwardPoints2",
                        "alwaysRequired": false,
                        "datatype": "PriceOffset",
                        "description": "SELL quote forward points for swap far leg.",
                        "wireId": "642"
                    },
                    {
                        "position": 21,
                        "name": "OfferForwardPoints",
                        "alwaysRequired": false,
                        "datatype": "PriceOffset",
                        "description": "The offer forward points",
                        "wireId": "191"
                    },
                    {
                        "position": 22,
                        "name": "OfferForwardPoints2",
                        "alwaysRequired": false,
                        "datatype": "PriceOffset",
                        "description": "BUY quote forward points for swap far leg.",
                        "wireId": "643"
                    },
                    {
                        "position": 23,
                        "name": "FutSettDate",
                        "alwaysRequired": false,
                        "datatype": "LocalMktDate",
                        "description": "The value date of a forward or near leg of a swap, as specified in the Quote Request. Tenors (SettlmntTyp) are converted to absolute dates.",
                        "wireId": "64",
                        "length": 0
                    },
                    {
                        "position": 24,
                        "name": "FutSettDate2",
                        "alwaysRequired": false,
                        "datatype": "LocalMktDate",
                        "description": "The value date of the far leg of a swap, as specified in the Quote Request.",
                        "wireId": "193",
                        "length": 0
                    },
                    {
                        "position": 25,
                        "name": "OrderQty2",
                        "alwaysRequired": false,
                        "datatype": "Qty",
                        "description": "The amount of a swap far leg",
                        "wireId": "192",
                        "length": 0
                    },
                    {
                        "position": 26,
                        "name": "Currency",
                        "alwaysRequired": true,
                        "datatype": "Currency",
                        "description": "Indicates the denomination of the BidSize and OfferSize fields",
                        "wireId": "15",
                        "length": 3
                    },
                    {
                        "position": 27,
                        "name": "ExpireTime",
                        "alwaysRequired": false,
                        "datatype": "UTCTimestamp",
                        "description": "Will be present on quotes for RFS. Used to indicate how long the RFS session will continue to send quotes. ExpireTime is in UTC.",
                        "wireId": "126"
                    },
                    {
                        "position": 28,
                        "name": "QuoteType",
                        "alwaysRequired": true,
                        "datatype": "char",
                        "description": "Will be present on quotes for RFS. Used to indicate dealable versus indicative prices.",
                        "wireId": "537",
                        "values": [
                            {
                                "wireValue": "0",
                                "name": "Indicative price"
                            },
                            {
                                "wireValue": "1",
                                "name": "Dealable price"
                            }
                        ]
                    },
                    {
                        "position": 29,
                        "name": "BidSwapPoints",
                        "alwaysRequired": false,
                        "datatype": "float",
                        "description": "Swap points of a swap SELL quote",
                        "wireId": "1065"
                    },
                    {
                        "position": 30,
                        "name": "OfferSwapPoints",
                        "alwaysRequired": false,
                        "datatype": "float",
                        "description": "Swap points of a swap BUY quote.",
                        "wireId": "1066"
                    },
                    {
                        "position": 31,
                        "name": "BranchCountryCode",
                        "alwaysRequired": false,
                        "datatype": "Country",
                        "description": "Will only be sent to clients configured to receive MiFID II fields.\nISO two character code for the country providing the quote.",
                        "wireId": "421"
                    },
                    {
                        "position": 32,
                        "name": "NoPartyIDs",
                        "alwaysRequired": true,
                        "datatype": "NumInGroup",
                        "description": "This block will only be sent to client configured to receive MiFID II fields.\n\nThe number of repeating groups to follow.\nThe repeating groups should contain unique combinations of PartyID , PartyIDSource , PartyRole  and PartyRoleQualifier ",
                        "wireId": "453",
                        "values": [
                            {
                                "wireValue": 1,
                                "name": "One"
                            },
                            {
                                "wireValue": 2,
                                "name": "Two"
                            },
                            {
                                "wireValue": 3,
                                "name": "Three"
                            },
                            {
                                "wireValue": 4,
                                "name": "Four"
                            }
                        ],
                        "fields": [
                            {
                                "position": 0,
                                "name": "PartyID",
                                "alwaysRequired": true,
                                "datatype": "String",
                                "description": "The party id (counterparty)\n\nUsed values:\nFor 452=12 or 452=122, this will either be the Algo ID if electronically priced or the trader short code if manually priced",
                                "wireId": "448"
                            },
                            {
                                "position": 1,
                                "name": "PartyIDSource",
                                "alwaysRequired": true,
                                "datatype": "char",
                                "description": "The type of party ID",
                                "wireId": "447",
                                "values": [
                                    {
                                        "wireValue": "D",
                                        "name": "Prop - Custome code"
                                    }
                                ]
                            },
                            {
                                "position": 2,
                                "name": "PartyRole",
                                "alwaysRequired": true,
                                "datatype": "int",
                                "description": "The type of party",
                                "wireId": "452",
                                "values": [
                                    {
                                        "wireValue": 12,
                                        "name": "Executing Trader (Create/Cancel/Amend)"
                                    },
                                    {
                                        "wireValue": 122,
                                        "name": "Investment Decision Maker"
                                    }
                                ]
                            },
                            {
                                "position": 3,
                                "name": "PartyRoleQualifier",
                                "alwaysRequired": false,
                                "datatype": "int",
                                "description": "Provides further qualification of PartyRole",
                                "wireId": "2376",
                                "values": [
                                    {
                                        "wireValue": 22,
                                        "name": "Algorithm"
                                    },
                                    {
                                        "wireValue": 24,
                                        "name": "Natural Person"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "position": 33,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "1uIxqAVS",
                "wireId": "S"
            },
            "KBfFbiqQ": {
                "name": "Quote Request",
                "direction": "in",
                "description": "To request a quote for an FX Forward price.",
                "fields": [
                    {
                        "position": 0,
                        "name": "StandardHeader",
                        "alwaysRequired": true,
                        "blockKey": "CSFKK2JK"
                    },
                    {
                        "position": 1,
                        "name": "QuoteReqID",
                        "alwaysRequired": true,
                        "datatype": "String",
                        "description": "Unique identifier for quote request",
                        "wireId": "131",
                        "length": 0
                    },
                    {
                        "position": 2,
                        "name": "NoRelatedSym",
                        "alwaysRequired": true,
                        "datatype": "NumInGroup",
                        "description": "Number of related symbols (instruments) in Request Specifies the number of repeating symbols specified.",
                        "wireId": "146",
                        "length": 0,
                        "values": [
                            {
                                "wireValue": 1,
                                "name": "One"
                            }
                        ],
                        "fields": [
                            {
                                "position": 0,
                                "name": "Symbol",
                                "alwaysRequired": true,
                                "datatype": "String",
                                "description": "\"CCY1/CCY2\"\n\nRates are expressed as \"currency1 in currency2\" (or \"currency2 per currency1\") e.g \"GBP/USD\" represents a rate expressed as USD per GBP, \"USD/JPY\" represents a rate expressed as JPY per USD, ect.). CCY1 and CCY2 are ISO currency codes.",
                                "wireId": "55"
                            },
                            {
                                "position": 1,
                                "name": "CFICode",
                                "alwaysRequired": false,
                                "datatype": "String",
                                "description": "Used to distinguish between asset types. Spot is assumed if not set.",
                                "wireId": "461",
                                "length": 0,
                                "values": [
                                    {
                                        "wireValue": "FFCPNO",
                                        "name": "Forward Outright (deliverable)"
                                    },
                                    {
                                        "wireValue": "FFCNNO",
                                        "name": "Non-deliverable forward (NDF)"
                                    },
                                    {
                                        "wireValue": "FFCPNW",
                                        "name": "Swap"
                                    },
                                    {
                                        "wireValue": "RCSXXX",
                                        "name": "Spot"
                                    },
                                    {
                                        "wireValue": "FFCNNW",
                                        "name": "Non-deliverable swap"
                                    }
                                ]
                            },
                            {
                                "position": 2,
                                "name": "SecurityID",
                                "alwaysRequired": true,
                                "datatype": "String",
                                "description": "Valor for Precious Metals. Requires SecurityIDSource. Needs to match the Symbol specified in Tag 55",
                                "wireId": "48"
                            },
                            {
                                "position": 3,
                                "name": "SecurityIDSource",
                                "alwaysRequired": false,
                                "datatype": "int",
                                "description": "",
                                "wireId": "22",
                                "values": [
                                    {
                                        "wireValue": 0,
                                        "name": "Valoren"
                                    }
                                ]
                            },
                            {
                                "position": 4,
                                "name": "BaseCcyDeliveryLocationType",
                                "alwaysRequired": false,
                                "datatype": "char",
                                "description": "",
                                "wireId": "9102",
                                "values": [
                                    {
                                        "wireValue": "R",
                                        "name": "Default"
                                    },
                                    {
                                        "wireValue": "N",
                                        "name": "Onshore"
                                    },
                                    {
                                        "wireValue": "O",
                                        "name": "Offshore"
                                    }
                                ]
                            },
                            {
                                "position": 5,
                                "name": "CounterCcyDeliveryLocationType",
                                "alwaysRequired": false,
                                "datatype": "char",
                                "description": "",
                                "wireId": "9103",
                                "values": [
                                    {
                                        "wireValue": "R",
                                        "name": "Default"
                                    },
                                    {
                                        "wireValue": "N",
                                        "name": "Onshore"
                                    },
                                    {
                                        "wireValue": "O",
                                        "name": "Offshore"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "position": 3,
                        "name": "NoPartyIDs",
                        "alwaysRequired": true,
                        "datatype": "NumInGroup",
                        "description": "The number of repeating groups to follow.The repeating group should contain unique combinations of PartyID , PartyIDSource , and PartyRole .",
                        "wireId": "453",
                        "values": [
                            {
                                "wireValue": 1,
                                "name": "One"
                            },
                            {
                                "wireValue": 2,
                                "name": "Two"
                            },
                            {
                                "wireValue": 3,
                                "name": "Three"
                            },
                            {
                                "wireValue": 4,
                                "name": "Four"
                            }
                        ],
                        "fields": [
                            {
                                "position": 0,
                                "name": "PartyID",
                                "alwaysRequired": true,
                                "datatype": "String",
                                "description": "The party id (counterparty)",
                                "wireId": "448"
                            },
                            {
                                "position": 1,
                                "name": "PartyIDSource",
                                "alwaysRequired": true,
                                "datatype": "char",
                                "description": "The type of party ID",
                                "wireId": "447",
                                "values": [
                                    {
                                        "wireValue": "D",
                                        "name": "Prop - Custome code"
                                    }
                                ]
                            },
                            {
                                "position": 2,
                                "name": "PartyRole",
                                "alwaysRequired": true,
                                "datatype": "int",
                                "description": "The type of party",
                                "wireId": "452",
                                "values": [
                                    {
                                        "wireValue": 13,
                                        "name": "Order Origination Firm (when counterparty id is given for field 448)"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "position": 4,
                        "name": "OrderQty",
                        "alwaysRequired": true,
                        "datatype": "Qty",
                        "description": "The target amount for which the quote request. Expressed in units of the currency indicated by tag Currency, where specified, otherwise assumed to be in units of CCY1. In case of a swap, it is the near leg amount.",
                        "wireId": "38"
                    },
                    {
                        "position": 5,
                        "name": "OrderQty2",
                        "alwaysRequired": false,
                        "datatype": "Qty",
                        "description": "The amount of the far leg of a swap.",
                        "wireId": "192",
                        "length": 0
                    },
                    {
                        "position": 6,
                        "name": "SettlmntTyp",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "Can be used to set a tenor for forwards or a swap near leg instead of a date in field 64.\nON = Overnight\nTOD = Today (T)\n2 = Tomorrow (T+1)\n0 = Spot\nC = Spot Next (Spot + 1)\nDx = Spot + x business days (where 1 ",
                        "wireId": "63",
                        "length": 0
                    },
                    {
                        "position": 7,
                        "name": "FutSettDate",
                        "alwaysRequired": false,
                        "datatype": "UTCDateOnly",
                        "description": "Must be provided if the product is a forward and field 63 is not provided. Overrides field 63 if provided. Used to specify the value date of the forward, in the format YYYYMMDD.",
                        "wireId": "64"
                    },
                    {
                        "position": 8,
                        "name": "SettlmntTyp2",
                        "alwaysRequired": false,
                        "datatype": "Tenor",
                        "description": "Can be used to set a tenor for a swap far leg instead of a date in field 193. This is a custom field.\nCan be used to set a tenor for forwards instead of a date in field 64.\nON = Overnight\nTOD = Today (T)\n2 = Tomorrow (T+1)\n0 = Spot\nC = Spot Next (Spot + 1)\nDx = Spot + x business days (where 1 ",
                        "wireId": "6600"
                    },
                    {
                        "position": 9,
                        "name": "FutSettDate2",
                        "alwaysRequired": false,
                        "datatype": "LocalMktDate",
                        "description": "Used to specify the far leg date of a swap, in the format YYYYMMDD.",
                        "wireId": "193",
                        "length": 0
                    },
                    {
                        "position": 10,
                        "name": "Currency",
                        "alwaysRequired": false,
                        "datatype": "Currency",
                        "description": "Used to specify to denomination of the amount given by the OrderQty field. If this is not specified, then CCY1 is assumed.",
                        "wireId": "15",
                        "length": 3
                    },
                    {
                        "position": 11,
                        "name": "MaturityDate",
                        "alwaysRequired": false,
                        "datatype": "LocalMktDate",
                        "description": "NDF Fixing Date required (option for ND crosses)\nOnly valid for NDF or ND Swap messages (CFICode=FFCNNO or FFCNNW)",
                        "wireId": "541"
                    },
                    {
                        "position": 12,
                        "name": "MaturityDate2",
                        "alwaysRequired": false,
                        "datatype": "LocalMktDate",
                        "description": "NDF Fixing Date (far leg) required (option for ND crosses)\nOnly valid for ND Swap messages (CFICode= FFCNNW)",
                        "wireId": "7541"
                    },
                    {
                        "position": 13,
                        "name": "FixingReference",
                        "alwaysRequired": false,
                        "datatype": "String",
                        "description": "Used to specify the required fixing procedure of an NDF.\n\nSee Appendix 7.17 for valid values\n\nOnly valid for NDF messages (CFICode = FFCNNO) or ND Swap messages (CFICode=FFCNNW)\n\nMandatory only for ND crosses",
                        "wireId": "7075"
                    },
                    {
                        "position": 14,
                        "name": "RequestFixingInfo",
                        "alwaysRequired": false,
                        "datatype": "int",
                        "description": "Request NDF fixing inforamtion (date and procedure) on response.\nOnly valid for CFICode-FFCNNO or CFICode=FFCNNW;ignored otherwise.",
                        "wireId": "10006",
                        "values": [
                            {
                                "wireValue": 2,
                                "name": "Face Percent"
                            },
                            {
                                "wireValue": 3,
                                "name": "pips"
                            },
                            {
                                "wireValue": 0,
                                "name": "Yes"
                            }
                        ]
                    },
                    {
                        "position": 15,
                        "name": "ExpireTime",
                        "alwaysRequired": false,
                        "datatype": "UTCTimestamp",
                        "description": "Used to specify end time for Request for Stream (RFS). ExpireTime is in UTC.",
                        "wireId": "126"
                    },
                    {
                        "position": 16,
                        "name": "StandardTrailer",
                        "alwaysRequired": true,
                        "blockKey": "abU5YDSp"
                    }
                ],
                "historyKey": "Z5eq2y47",
                "wireId": "R"
            }
        }
    },
    "workflows": {
        "nav": {
            "bbbbbbbb": {
                "name": "Request for Quote - Order Placement session",
                "description": "As an alternative to a streaming price subscription, a “Request for Quote” (RFQ) model is supported for FX Spot, FX Forward Outright, NDF & FX Swaps"
            }
        },
        "states": {
            "QuoteRequest.Submitted": {
                "nav": "bbbbbbbb",
                "name": "Submitted",
                "isInitial": true,
                "description": "Request for Quote for Streaming price subscription"
            },
            "QuoteRequest.Active": {
                "nav": "bbbbbbbb",
                "name": "Active",
                "description": "Subscription request activated"
            },
            "QuoteRequest.Rejected": {
                "nav": "bbbbbbbb",
                "name": "Rejected",
                "isFinal": true,
                "description": "Subscription request rejected"
            },
            "QuoteRequest.Terminated": {
                "nav": "bbbbbbbb",
                "name": "Terminated",
                "isFinal": true,
                "description": "Subscription is terminated"
            }
        },
        "event": {
            "MARKET_OPEN": {
                "description": "This is my market open",
                "time": "09:00:00"
            },
            "MARKET_CLOSE": {
                "description": "This is my market close",
                "time": "16:00:00"
            },
            "SUBSCRIPTION_INTERRUPT": {
                "description": "A subscription has been interrupted"
            },
            "RFS_EXPIRY": {
                "description": "A request for subscription has expired"
            }
        },
        "transitions": {
            "xxxx1111": {
                "description": "Unknown message",
                "start": [
                    "Unknown.Message"
                ],
                "responses": {
                    "xxxx1122": {
                        "type": "technical",
                        "messageKey": "bDQIJPkq"
                    },
                    "xxxx1123": {
                        "isNullResponse": true
                    }
                }
            },
            "bbbb1111": {
                "nav": "bbbbbbbb",
                "description": "Reponses to Quote Request (RFQ)",
                "start": [
                    "QuoteRequest.Submitted"
                ],
                "trigger": {
                    "type": "technical",
                    "key": "KBfFbiqQ",
                    "direction": "in"
                },
                "responses": {
                    "bbbb1122": {
                        "type": "technical",
                        "messageKey": "8mF7jFju",
                        "with": {
                            "15": {
                                "last": "15"
                            },
                            "55": {
                                "last": "5"
                            },
                            "62": {
                                "time": "NOW"
                            },
                            "126": {
                                "last": "126"
                            },
                            "131": {
                                "last": "131"
                            },
                            "453": {
                                "last": "453",
                                "children": {
                                    "447": {
                                        "last": "447"
                                    },
                                    "448": {
                                        "last": "448"
                                    },
                                    "452": {
                                        "last": "452"
                                    },
                                    "2376": {
                                        "last": "2376"
                                    }
                                }
                            },
                            "461": {
                                "last": "461"
                            }
                        },
                        "end": "QuoteRequest.Active",
                        "isSuccess": true,
                        "description": "RFQ active"
                    },
                    "bbbb1133": {
                        "type": "technical",
                        "messageKey": "d5Fr1B1l",
                        "with": {
                            "658": {
                                "fixed": "99"
                            }
                        },
                        "description": "RFQ rejected",
                        "end": "QuoteRequest.Rejected",
                        "isSuccess": false
                    },
                    "bbbb1144": {
                        "type": "technical",
                        "messageKey": "bDQIJPkq",
                        "with": {
                            "45": {
                                "last": "34"
                            },
                            "372": {
                                "last": "35"
                            }
                        },
                        "description": "RFQ Rejected (3)",
                        "end": "QuoteRequest.Rejected",
                        "isSuccess": false
                    },
                    "bbbb1155": {
                        "type": "technical",
                        "messageKey": "qdmCfuBx",
                        "with": {
                            "45": {
                                "last": "34"
                            },
                            "372": {
                                "last": "35"
                            }
                        },
                        "description": "RFQ Rejected (j)",
                        "end": "QuoteRequest.Rejected",
                        "isSuccess": false
                    }
                }
            },
            "bbbb2222": {
                "nav": "bbbbbbbb",
                "description": "Cancel Quote Request (RFQ) all quotes",
                "start": [
                    "QuoteRequest.Active"
                ],
                "trigger": {
                    "type": "technical",
                    "key": "QhYCGmlh",
                    "direction": "in",
                    "where": "($298 == 4)"
                },
                "responses": {
                    "bbbb2233": {
                        "type": "technical",
                        "messageKey": "QhYCGmlh",
                        "with": {
                            "58": "RFS cancelled by the client"
                        },
                        "description": "Cancel RFQ success",
                        "end": "QuoteRequest.Terminated",
                        "isSuccess": true
                    },
                    "bbbb2244": {
                        "type": "technical",
                        "messageKey": "d5Fr1B1l",
                        "with": {
                            "58": {
                                "fixed": "Stream not found for specified request ID"
                            }
                        },
                        "description": "Cancel RFQ fail",
                        "end": "QuoteRequest.Terminated",
                        "isSuccess": false
                    },
                    "bbbb2255": {
                        "type": "technical",
                        "messageKey": "bDQIJPkq",
                        "description": "Cancel RFQ reject(3)",
                        "end": "QuoteRequest.Active",
                        "isSuccess": false
                    },
                    "bbbb2266": {
                        "type": "technical",
                        "messageKey": "qdmCfuBx",
                        "with": {
                            "45": {
                                "last": "34"
                            },
                            "372": {
                                "last": "35"
                            }
                        },
                        "description": "Cancel RFQ reject(j)",
                        "end": "QuoteRequest.Active",
                        "isSuccess": false
                    }
                }
            },
            "bbbb3333": {
                "nav": "bbbbbbbb",
                "description": "Expiration of Request for Stream",
                "start": [
                    "QuoteRequest.Active"
                ],
                "trigger": {
                    "type": "event",
                    "key": "RFS_EXPIRY"
                },
                "responses": {
                    "bbbb3344": {
                        "type": "technical",
                        "messageKey": "QhYCGmlh",
                        "with": {
                            "58": {
                                "fixed": "RFS expired"
                            }
                        },
                        "description": "RFS expiry",
                        "end": "QuoteRequest.Terminated",
                        "isSuccess": true
                    }
                }
            }
        }
    }
}
