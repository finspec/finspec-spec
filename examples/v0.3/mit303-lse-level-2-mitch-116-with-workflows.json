{
  "finspec": "0.3",
  "info": {
    "version": "11.6",
    "issueDate": "2017-01-05",
    "liveDate": "2017-01-05",
    "issuer": "London Stock Exchange Group",
    "title": "MIT303 LSE - Level 2 - MITCH",
    "contacts": {
      "name": "London Stock Exchange Group"
    }
  },
  "protocol": "mitch",
  "isBinary": false,
  "datatypes": [
    {
      "name": "Alpha",
      "baseType": "string",
      "length": 1
    },
    {
      "name": "BitField",
      "baseType": "string",
      "length": 1
    },
    {
      "name": "Byte(ASCII)",
      "baseType": "string",
      "length": 1
    },
    {
      "name": "Byte(Hex)",
      "baseType": "string",
      "length": 1
    },
    {
      "name": "Date",
      "baseType": "string",
      "length": 8
    },
    {
      "name": "Float",
      "baseType": "string",
      "length": 4,
      "precision": 4
    },
    {
      "name": "Int16",
      "baseType": "string",
      "length": 2
    },
    {
      "name": "Int32",
      "baseType": "string",
      "length": 4
    },
    {
      "name": "Int8",
      "baseType": "string",
      "length": 1
    },
    {
      "name": "Price4",
      "baseType": "string",
      "length": 4
    },
    {
      "name": "Price8",
      "baseType": "string",
      "length": 8,
      "precision": 8
    },
    {
      "name": "Size4",
      "baseType": "string",
      "length": 8,
      "precision": 4
    },
    {
      "name": "String",
      "baseType": "string"
    },
    {
      "name": "Time (6)",
      "baseType": "string",
      "length": 6
    },
    {
      "name": "Time (8)",
      "baseType": "string",
      "length": 8
    },
    {
      "name": "Uint16",
      "baseType": "string",
      "length": 2
    },
    {
      "name": "UInt32",
      "baseType": "string",
      "length": 4
    },
    {
      "name": "UInt32(Time)",
      "baseType": "string",
      "length": 4
    },
    {
      "name": "UInt64",
      "baseType": "string",
      "length": 8
    },
    {
      "name": "UInt64(Time)",
      "baseType": "string",
      "length": 8
    },
    {
      "name": "UInt8",
      "baseType": "string",
      "length": 1
    }
  ],
  "commonBlocks": [],
  "messages": {
    "session": [
      {
        "name": "Heartbeat",
        "wireId": "0x00",
        "direction": "out",
        "description": "",
        "fields": [],
        "validations": [],
        "actions": []
      },
      {
        "name": "Login Request",
        "wireId": "0x01",
        "direction": "in",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Username",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "CompID assigned to the client.",
            "length": 1
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": false,
            "datatype": "Byte(Hex)",
            "description": "fdsfagagasg",
            "length": 1
          },
          {
            "position": 2,
            "name": "Username",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "CompID assigned to the client.",
            "length": 1
          },
          {
            "position": 3,
            "name": "Password",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Password assigned to the CompID.",
            "length": 1
          },
          {
            "position": 4,
            "name": "Cross Type",
            "alwaysRequired": false,
            "datatype": "UInt8",
            "description": "The type of the Cross/BTF Order. Will only be populated in case of Cross/BTF order executions. In other scenarios, the field will be populated with a value of â€˜0â€™ (zero). chsadjcsadbhcahcbadjbchasdbchsdbc",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Internal Cross"
              },
              {
                "enum": "2",
                "description": "Internal BTF"
              },
              {
                "enum": "3",
                "description": "Committed Cross"
              },
              {
                "enum": "4",
                "description": "Committed BTF"
              }
            ]
          },
          {
            "position": 5,
            "name": "Executed Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Quantity executed.",
            "length": 4
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Login Response",
        "wireId": "0x02",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Status",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Status of the login request. ",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Login Accepted"
              },
              {
                "enum": "2",
                "description": "CompID Inactive/Locked"
              },
              {
                "enum": "3",
                "description": "Login Limit Reached"
              },
              {
                "enum": "4",
                "description": "Service Unavailable"
              },
              {
                "enum": "5",
                "description": "Concurrent Limit Reached "
              },
              {
                "enum": "6",
                "description": "Failed (Other)"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Logout Request",
        "wireId": "0x05",
        "direction": "in",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      }
    ],
    "application": [
      {
        "name": "Replay Request",
        "wireId": "0x03",
        "direction": "in",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Market Data Group",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Identity of the market data group the payload messages relate to. This field is not validated for client initiated messages.",
            "length": 1
          },
          {
            "position": 3,
            "name": "First Message",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Sequence number of the first message in range to be retransmitted.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Count",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Number of messages to be resent",
            "length": 2
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Replay Response",
        "wireId": "0x04",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Market Data Group",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Identity of the market data group the payload messages relate to. This field is not validated for client initiated messages.",
            "length": 1
          },
          {
            "position": 3,
            "name": "First Message",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Sequence number of the first message in range to be retransmitted.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Count",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Number of messages to be resent",
            "length": 2
          },
          {
            "position": 5,
            "name": "Status",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Status of the login request. ",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Login Accepted"
              },
              {
                "enum": "2",
                "description": "CompID Inactive/Locked"
              },
              {
                "enum": "3",
                "description": "Login Limit Reached"
              },
              {
                "enum": "4",
                "description": "Service Unavailable"
              },
              {
                "enum": "5",
                "description": "Concurrent Limit Reached "
              },
              {
                "enum": "6",
                "description": "Failed (Other)"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Snapshot Request",
        "wireId": "0x81",
        "direction": "in",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Sequence Number",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Sequence number of the first payload message.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Segment",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Segment the request relates to. The field should contain only spaces if the Instrument ID field is populated",
            "length": 1
          },
          {
            "position": 4,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Snapshot Response",
        "wireId": "0x82",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Sequence Number",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Sequence number of the first payload message.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Order Count",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "This field will always be populated with 0.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Status",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Status of the login request. ",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Login Accepted"
              },
              {
                "enum": "2",
                "description": "CompID Inactive/Locked"
              },
              {
                "enum": "3",
                "description": "Login Limit Reached"
              },
              {
                "enum": "4",
                "description": "Service Unavailable"
              },
              {
                "enum": "5",
                "description": "Concurrent Limit Reached "
              },
              {
                "enum": "6",
                "description": "Failed (Other)"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Snapshot Complete",
        "wireId": "0x83",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Sequence Number",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Sequence number of the first payload message.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Segment",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Segment the request relates to. The field should contain only spaces if the Instrument ID field is populated",
            "length": 1
          },
          {
            "position": 4,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 5,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Symbol Directory",
        "wireId": "0x52",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Trading Status",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Halt"
              },
              {
                "enum": "2",
                "description": "Regular Trading/Start of Trade Reporting"
              },
              {
                "enum": "3",
                "description": "Opening/First  Auction Call"
              },
              {
                "enum": "4",
                "description": "Post-Close"
              },
              {
                "enum": "5",
                "description": "Market Close / System Shutdown"
              },
              {
                "enum": "6",
                "description": "Closing Auction Call"
              },
              {
                "enum": "7",
                "description": "AESP Auction Call"
              },
              {
                "enum": "8",
                "description": "Resume Auction Call"
              },
              {
                "enum": "9",
                "description": "Pause"
              },
              {
                "enum": "10",
                "description": "Pre-Mandatory"
              },
              {
                "enum": "11",
                "description": "Mandatory"
              },
              {
                "enum": "12",
                "description": "Post-Mandatory"
              },
              {
                "enum": "13",
                "description": "EDSP Auction Call"
              },
              {
                "enum": "14",
                "description": "Periodic Auction Call"
              },
              {
                "enum": "15",
                "description": "End Trade Reporting"
              },
              {
                "enum": "16",
                "description": "No Active Session"
              },
              {
                "enum": "17",
                "description": "End of Post Close"
              },
              {
                "enum": "18",
                "description": "Closing Price Publication"
              },
              {
                "enum": "19",
                "description": "Closing Price Crossing "
              }
            ]
          },
          {
            "position": 7,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          },
          {
            "position": 8,
            "name": "Halt Reason",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Reason for the trading halt. This field will contain only spaces if Trading Status is not â€œHâ€, or if the reason is unknown.",
            "length": 1
          },
          {
            "position": 9,
            "name": "Session Change Reason",
            "alwaysRequired": true,
            "datatype": "UInt8",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Scheduled Transition"
              },
              {
                "enum": "2",
                "description": "Extended by Market Ops"
              },
              {
                "enum": "3",
                "description": "Shortened by Market Ops"
              },
              {
                "enum": "4",
                "description": "Market Order Imbalance"
              },
              {
                "enum": "5",
                "description": "Price Outside Range"
              },
              {
                "enum": "6",
                "description": "Unavailable (recovery service only)"
              }
            ]
          },
          {
            "position": 10,
            "name": "New End Time",
            "alwaysRequired": true,
            "datatype": "Time (8)",
            "description": "New time the session will end. Will only be stamped if the session change was not in the original schedule e.g. AESP auction call or unscheduled session. For all other cases a space will be stamped on this field. New End Time will be in terms of the local market time (i.e. not UTC).",
            "length": 8
          },
          {
            "position": 11,
            "name": "Book type",
            "alwaysRequired": true,
            "datatype": "UInt8",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "On-Book"
              },
              {
                "enum": "2",
                "description": "Off-Book"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Symbol Status",
        "wireId": "0x48",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Trading Status",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Halt"
              },
              {
                "enum": "2",
                "description": "Regular Trading/Start of Trade Reporting"
              },
              {
                "enum": "3",
                "description": "Opening/First  Auction Call"
              },
              {
                "enum": "4",
                "description": "Post-Close"
              },
              {
                "enum": "5",
                "description": "Market Close / System Shutdown"
              },
              {
                "enum": "6",
                "description": "Closing Auction Call"
              },
              {
                "enum": "7",
                "description": "AESP Auction Call"
              },
              {
                "enum": "8",
                "description": "Resume Auction Call"
              },
              {
                "enum": "9",
                "description": "Pause"
              },
              {
                "enum": "10",
                "description": "Pre-Mandatory"
              },
              {
                "enum": "11",
                "description": "Mandatory"
              },
              {
                "enum": "12",
                "description": "Post-Mandatory"
              },
              {
                "enum": "13",
                "description": "EDSP Auction Call"
              },
              {
                "enum": "14",
                "description": "Periodic Auction Call"
              },
              {
                "enum": "15",
                "description": "End Trade Reporting"
              },
              {
                "enum": "16",
                "description": "No Active Session"
              },
              {
                "enum": "17",
                "description": "End of Post Close"
              },
              {
                "enum": "18",
                "description": "Closing Price Publication"
              },
              {
                "enum": "19",
                "description": "Closing Price Crossing "
              }
            ]
          },
          {
            "position": 7,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          },
          {
            "position": 8,
            "name": "Halt Reason",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Reason for the trading halt. This field will contain only spaces if Trading Status is not â€œHâ€, or if the reason is unknown.",
            "length": 1
          },
          {
            "position": 9,
            "name": "Session Change Reason",
            "alwaysRequired": true,
            "datatype": "UInt8",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Scheduled Transition"
              },
              {
                "enum": "2",
                "description": "Extended by Market Ops"
              },
              {
                "enum": "3",
                "description": "Shortened by Market Ops"
              },
              {
                "enum": "4",
                "description": "Market Order Imbalance"
              },
              {
                "enum": "5",
                "description": "Price Outside Range"
              },
              {
                "enum": "6",
                "description": "Unavailable (recovery service only)"
              }
            ]
          },
          {
            "position": 10,
            "name": "New End Time",
            "alwaysRequired": true,
            "datatype": "Time (8)",
            "description": "New time the session will end. Will only be stamped if the session change was not in the original schedule e.g. AESP auction call or unscheduled session. For all other cases a space will be stamped on this field. New End Time will be in terms of the local market time (i.e. not UTC).",
            "length": 8
          },
          {
            "position": 11,
            "name": "Book type",
            "alwaysRequired": true,
            "datatype": "UInt8",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "On-Book"
              },
              {
                "enum": "2",
                "description": "Off-Book"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Add Order",
        "wireId": "0x41",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Order ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the order.",
            "length": 8
          },
          {
            "position": 4,
            "name": "Side",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Buy Order"
              },
              {
                "enum": "2",
                "description": "Sell Order"
              }
            ]
          },
          {
            "position": 5,
            "name": "Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Displayed quantity of the order.",
            "length": 4
          },
          {
            "position": 6,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 7,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 8,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 9,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          },
          {
            "position": 10,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Add Attributed Order",
        "wireId": "0x46",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Order ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the order.",
            "length": 8
          },
          {
            "position": 4,
            "name": "Side",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Buy Order"
              },
              {
                "enum": "2",
                "description": "Sell Order"
              }
            ]
          },
          {
            "position": 5,
            "name": "Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Displayed quantity of the order.",
            "length": 4
          },
          {
            "position": 6,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 7,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 8,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 9,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          },
          {
            "position": 10,
            "name": "Attribution",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Identity of firm that submitted the order.",
            "length": 1
          },
          {
            "position": 11,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Order Deleted",
        "wireId": "0x44",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Order ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the order.",
            "length": 8
          },
          {
            "position": 4,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          },
          {
            "position": 5,
            "name": "InstrumentID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Instrument Identifier",
            "length": 4
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Order Modified",
        "wireId": "0x55",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Order ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the order.",
            "length": 8
          },
          {
            "position": 4,
            "name": "New Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "New displayed quantity of the order.",
            "length": 4
          },
          {
            "position": 5,
            "name": "New Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "New limit price of the order.",
            "length": 8
          },
          {
            "position": 6,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Order Book Clear",
        "wireId": "0x79",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Order Executed",
        "wireId": "0x45",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Order ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the order.",
            "length": 8
          },
          {
            "position": 4,
            "name": "Executed Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Quantity executed.",
            "length": 4
          },
          {
            "position": 5,
            "name": "Display Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Displayed quantity of the order after the execution.",
            "length": 4
          },
          {
            "position": 6,
            "name": "Trade Match ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the trade.",
            "length": 8
          },
          {
            "position": 7,
            "name": "Printable",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1
          },
          {
            "position": 8,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Order Executed With Price/Size",
        "wireId": "0x43",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Order ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the order.",
            "length": 8
          },
          {
            "position": 4,
            "name": "Executed Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Quantity executed.",
            "length": 4
          },
          {
            "position": 5,
            "name": "Trade Match ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the trade.",
            "length": 8
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Trade",
        "wireId": "0x50",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Executed Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Quantity executed.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 7,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          },
          {
            "position": 8,
            "name": "Trade Match ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the trade.",
            "length": 8
          },
          {
            "position": 9,
            "name": "Cross Type",
            "alwaysRequired": true,
            "datatype": "UInt8",
            "description": "The type of the Cross/BTF Order. Will only be populated in case of Cross/BTF order executions. In other scenarios, the field will be populated with a value of â€˜0â€™ (zero).",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Internal Cross"
              },
              {
                "enum": "2",
                "description": "Internal BTF"
              },
              {
                "enum": "3",
                "description": "Committed Cross"
              },
              {
                "enum": "4",
                "description": "Committed BTF"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Auction Trade",
        "wireId": "0x51",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Displayed quantity of the order.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 7,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          },
          {
            "position": 8,
            "name": "Trade Match ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the trade.",
            "length": 8
          },
          {
            "position": 9,
            "name": "Auction Type",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Closing Auction"
              },
              {
                "enum": "2",
                "description": "Opening Auction"
              },
              {
                "enum": "3",
                "description": "AESP"
              },
              {
                "enum": "4",
                "description": "EDSP"
              },
              {
                "enum": "5",
                "description": "Resume Auction"
              },
              {
                "enum": "6",
                "description": "Periodic Auction"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Off-Book Trade",
        "wireId": "0x78",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Executed Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Quantity executed.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 7,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          },
          {
            "position": 8,
            "name": "Trade Match ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the trade.",
            "length": 8
          },
          {
            "position": 9,
            "name": "Trade Type",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Type of off-book trade. See Appendix B.",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "On-Book Trade"
              },
              {
                "enum": "2",
                "description": "Off-Book Trade"
              }
            ]
          },
          {
            "position": 10,
            "name": "Trade Time",
            "alwaysRequired": true,
            "datatype": "Time (8)",
            "description": "Time off-book trade was executed. Time will be specified in UTC.",
            "length": 8
          },
          {
            "position": 11,
            "name": "Trade Date",
            "alwaysRequired": true,
            "datatype": "Date",
            "description": "Date off-book trade was executed.",
            "length": 8
          },
          {
            "position": 12,
            "name": "Traded Currency",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Currency in which an off book trade has occurred other than for the trading currency of the relevant instrument.The possible values will be the ISO 4217 codes for currency. However the following values will also be disseminated: GBX = GB Pennies",
            "length": 1
          },
          {
            "position": 13,
            "name": "Original Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Price in the execution currency. The field should contain only zeroes if the trade did not take place in a currency other than for the trading currency of the instrument.",
            "length": 8
          },
          {
            "position": 14,
            "name": "Execution Venue",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "The possible values will be the ISO 10383 codes for Exchange ID. However the following values too will be disseminated: EXPA, SI, XOFF.",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "EXPA"
              },
              {
                "enum": "2",
                "description": "SI"
              },
              {
                "enum": "3",
                "description": "XOFF"
              }
            ]
          },
          {
            "position": 15,
            "name": "Flags",
            "alwaysRequired": true,
            "datatype": "BitField",
            "description": "Bit - 5 , name - Firm Quote, Meaning 0=No, 1 = Yes",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Trade Break",
        "wireId": "0x42",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Trade Match ID",
            "alwaysRequired": true,
            "datatype": "UInt64",
            "description": "Unique identifier of the trade.",
            "length": 8
          },
          {
            "position": 4,
            "name": "Trade Type",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "Type of off-book trade. See Appendix B.",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "On-Book Trade"
              },
              {
                "enum": "2",
                "description": "Off-Book Trade"
              }
            ]
          },
          {
            "position": 5,
            "name": "InstrumentID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Instrument Identifier",
            "length": 4
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Auction Info",
        "wireId": "0x49",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Paired Quantity",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Quantity that will be matched at the indicative price.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 7,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 8,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 9,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          },
          {
            "position": 10,
            "name": "Auction Type",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "Closing Auction"
              },
              {
                "enum": "2",
                "description": "Opening Auction"
              },
              {
                "enum": "3",
                "description": "AESP"
              },
              {
                "enum": "4",
                "description": "EDSP"
              },
              {
                "enum": "5",
                "description": "Resume Auction"
              },
              {
                "enum": "6",
                "description": "Periodic Auction"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Statistics",
        "wireId": "0x77",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Instrument ID",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "LSE Instrument Identifier. The instrument the request relates to. The field should contain only zeros if it does not relate to an instrument.",
            "length": 4
          },
          {
            "position": 4,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 5,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          },
          {
            "position": 6,
            "name": "Statistic Type",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "",
            "length": 1
          },
          {
            "position": 7,
            "name": "Price",
            "alwaysRequired": true,
            "datatype": "Price8",
            "description": "Limit price of the order.",
            "length": 8
          },
          {
            "position": 8,
            "name": "Open/Close Price Indicator",
            "alwaysRequired": true,
            "datatype": "Alpha",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "UT"
              },
              {
                "enum": "2",
                "description": "AT"
              },
              {
                "enum": "3",
                "description": "Mid of BBO"
              },
              {
                "enum": "4",
                "description": "Last AT"
              },
              {
                "enum": "5",
                "description": "Last UT"
              },
              {
                "enum": "6",
                "description": "Manual"
              },
              {
                "enum": "7",
                "description": "Derived from previous close"
              }
            ]
          },
          {
            "position": 9,
            "name": "Reserved",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "Reserved field",
            "length": 1
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "Time",
        "wireId": "0x54",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Seconds",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Number of seconds since midnight. Midnight will be in terms of the local time for the server (i.e. not UTC).",
            "length": 4
          }
        ],
        "validations": [],
        "actions": []
      },
      {
        "name": "System Event",
        "wireId": "0x53",
        "direction": "out",
        "description": "",
        "fields": [
          {
            "position": 0,
            "name": "Length",
            "alwaysRequired": true,
            "datatype": "Uint16",
            "description": "Length of the message block including the header and all payload messages.",
            "length": 2
          },
          {
            "position": 1,
            "name": "Message Type",
            "alwaysRequired": true,
            "datatype": "Byte(Hex)",
            "description": "",
            "length": 1
          },
          {
            "position": 2,
            "name": "Nanosecond",
            "alwaysRequired": true,
            "datatype": "UInt32",
            "description": "Nanoseconds since last Time message, accurate to the nearest microsecond.",
            "length": 4
          },
          {
            "position": 3,
            "name": "Event Code",
            "alwaysRequired": true,
            "datatype": "Byte(ASCII)",
            "description": "",
            "length": 1,
            "values": [
              {
                "enum": "1",
                "description": "End of Day"
              },
              {
                "enum": "2",
                "description": "Start of Day"
              }
            ]
          }
        ],
        "validations": [],
        "actions": []
      }
    ]
  },
  "workflows": [
      {
          "name": "LSE MITCH Recovery",
          "description": "This workflow models market data recovery mechanism.",
          "includeMessages" : [
              {
                  "messageType": ["0x01","0x02","0x81","0x82","0x83"]
              }
            ],
          "states" : [
              {
                  "ref": "Logged.Out",
                  "isInitial": true,
                  "description": "User is not connected or disconnected"
              },
              {
                  "ref": "logged.In",
                  "description": "User is successfully connected"
              },
              {
                  "ref": "Request.Accepted",
                  "description": "Request is Accepted"
              },
              {
                  "ref": "Request.Rejected",
                  "description": "Request is Rejected"
              },
              {
                  "ref": "Request.Completed",
                  "isFinal": true,				  
                  "description": "All snapshot updates have been sent"
              }
          ],
          "transitions": [
              {
                  "description": "User Logs in",
                  "start": ["Logged.Out"],
                  "triggerBy" : {
                      "messageWireId": "0x01"
                  },
                  "responses": [
                      {
                          "messageWireId": "0x02",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status == A)"
                            },
                          "end": "Logged.In",
                          "isSuccess": true
                      },
                      {
                          "messageWireId": "0x02",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status != A)"
                            },
                          "end": "Logged.Out",
                          "isSuccess": false
                      }
                  ]
              },
              {
                  "description": "Submit request for recovery on instrument",
                  "start": ["Logged.In"],
                  "triggerBy" : {
                      "messageWireId": "0x81",
                      "where": {
                            "expressionType": "jsep",
                            "expression": "($Instrument_ID > 0)"
                      }
                  },				  
                  "responses": [
                      {
                          "messageWireId": "0x82",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status == A)"
                            },
                          "end": "Request.Accepted",
                          "isSuccess": true
                      },
                      {
                          "messageWireId": "0x82",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status != A)"
                          },
                          "end": "Request.Rejected",
                          "isSuccess": false
                      }
                  ]
              },
              {
                  "description": "Submit request for recovery on segment",
                  "start": ["Logged.In"],
                  "triggerBy" : {
                      "messageWireId": "0x81",
                      "where": {
                            "expressionType": "jsep",
                            "expression": "($Instrument_ID == 0)"
                      }
                  },				  
                  "responses": [
                      {
                          "messageWireId": "0x82",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status == A)"
                            },
                          "end": "Request.Accepted",
                          "isSuccess": true
                      },
                      {
                          "messageWireId": "0x82",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status != A)"
                          },
                          "end": "Request.Rejected",
                          "isSuccess": false
                      }
                  ]
              },			  
              {
                  "description": "Completion of recovery",
                  "start": ["Request.Accepted"],
                  "responses": [
                     {
                        "messageWireId": "0x83",
                        "end": "Request.Completed",
                        "isSuccess": true
                      }
                  ]    
              }
            ]  
	    },
      {
          "name": "LSE MITCH Replay",
          "description": "This workflow models market data replay mechanism.",
          "includeMessages" : [
              {
                  "messageType": ["0x01","0x02","0x03","0x04"]
              }
            ],
          "states" : [
              {
                  "ref": "Logged.Out",
                  "isInitial": true,
                  "description": "User is not connected or disconnected"
              },
              {
                  "ref": "logged.In",
                  "description": "User is successfully connected"
              },
              {
                  "ref": "Request.Accepted",
                  "description": "Request is Accepted"
              },
              {
                  "ref": "Request.Rejected",
                  "description": "Request is Rejected"
              }
          ],
          "transitions": [
              {
                  "description": "User Logs in",
                  "start": ["Logged.Out"],
                  "triggerBy" : {
                      "messageWireId": "0x01"
                  },
                  "responses": [
                      {
                          "messageWireId": "0x02",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status == A)"
                            },
                          "end": "Logged.In",
                          "isSuccess": true
                      },
                      {
                          "messageWireId": "0x02",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status != A)"
                            },
                          "end": "Logged.Out",
                          "isSuccess": false
                      }
                  ]
              },
              {
                  "description": "Submit request for replay.",
                  "start": ["Logged.In"],
                  "triggerBy" : {
                      "messageWireId": "0x03"
                  },				  
                  "responses": [
                      {
                          "messageWireId": "0x04",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status == A)"
                            },
                          "end": "Request.Accepted",
                          "isSuccess": true
                      },
                      {
                          "messageWireId": "0x04",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Status != A)"
                          },
                          "end": "Request.Rejected",
                          "isSuccess": false
                      }
                  ]
              }
          ]    
	  },	
      {
          "name": "LSE MITCH Market Status",
          "description": "This workflow models the state of the market.",
          "includeMessages" : [
              {
                  "messageType": ["0x53"]
              }
            ],
          "states" : [
              {
                  "ref": "Market.Closed",
                  "description": "Market is closed"
              },
              {
                  "ref": "Market.Open",
                  "description": "Market is Open"
              }
          ],
          "transitions": [
              {
                  "description": "Start of Day",
                  "start": ["Market.Closed"],
                  "responses": [
                      {
                          "messageWireId": "0x53",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Event_Code == O)"
                            },
                          "end": "Market.Open"
                      }
                  ]
              },
              {
                  "description": "End of Day",
                  "start": ["Market.Open"],
                  "responses": [
                      {
                          "messageWireId": "0x53",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Event_Code == C)"
                            },
                          "end": "Market.Closed"
                      }
                  ]
              }			  
		]
	  },
      {
          "name": "LSE MITCH trading cycle for SETS-L1",
          "description": "This workflow models change of status for SETS-L1 instruments",
          "includeMessages" : [
              {
                  "messageType": ["0x48"]
              }
            ],
          "states" : [
              {
                  "ref": "Instr.Pre-Trading",
                  "description":"Instrument is in Pre-Trading Phase"
              },
              {
                  "ref": "Instr.OpeningAuctionCall",
                  "description":"Instrument is in Opening Auction Call Phase"
              },
              {
                  "ref": "Instr.RegularTrading",
                  "description":"Instrument is in Regular Trading Phase"
              },
              {
                  "ref": "Instr.EDSPAuctionCall",
                  "description":"Instrument is in EDSP Auction Call Phase"
              },
              {
                  "ref": "Instr.PeriodicAuctionCall",
                  "description":"Instrument is in Periodic Auction Call Phase"
              },
              {
                  "ref": "Instr.ClosingAuctionCall",
                  "description":"Instrument is in Closing Auction Call Phase"
              },
              {
                  "ref": "Instr.ClosingPricePublication",
                  "description":"Instrument is in Closing Price Publication Phase"
              },
              {
                  "ref": "Instr.ClosingPriceCrossingSession",
                  "description":"Instrument is in Closing Price Crossing Session Phase"
              },
              {
                  "ref": "Instr.PostClose",
                  "description":"Instrument is in Post Close Phase"
              },
              {
                  "ref": "Instr.Closed",
                  "description":"Instrument trading is closed"
              },
              {
                  "ref": "Instr.Halted",
                  "description":"Instrument trading is halted. No order entry,or executions. Order deletion permitted."
              }		  
          ],
          "transitions": [
              {
                  "description": "Instrument moves to Opening Auction Call",
                  "start": ["Instr.Pre-Trading"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == a)"
                            },
                          "end": "Instr.OpeningAuctionCall"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to Regular Trading",
                  "start": ["Instr.OpeningAuctionCall","Instr.EDSPAuctionCall","Instr.PeriodicAuctionCall"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == T)"
                            },
                          "end": "Instr.RegularTrading"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to ESDP auction call",
                  "start": ["Instr.RegularTrading"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == q)"
                            },
                          "end": "Instr.EDSPAuctionCall"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to Periodic auction call",
                  "start": ["Instr.RegularTrading"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == r)"
                            },
                          "end": "Instr.PeriodicAuctionCall"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to Closing auction call",
                  "start": ["Instr.RegularTrading"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == d)"
                            },
                          "end": "Instr.ClosingAuctionCall"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to Closing Price Publication",
                  "start": ["Instr.ClosingAuctionCall"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == v)"
                            },
                          "end": "Instr.ClosingPricePublication"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to Closing Price Crossing Session",
                  "start": ["Instr.ClosingPricePublication"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == u)"
                            },
                          "end": "Instr.ClosingPriceCrossingSession"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to Post Close",
                  "start": ["Instr.ClosingPriceCrossingSession"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == b)"
                            },
                          "end": "Instr.PostClose"
                      }
                  ]
              },
              {
                  "description": "Instrument moves to full close ",
                  "start": ["Instr.PostClose"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == c)"
                            },
                          "end": "Instr.Closed"
                      }
                  ]
              },
              {
                  "description": "Instrument trading is halted",
                  "start": ["Instr.Pre-Trading","Instr.RegularTrading"],				  
                  "responses": [
                      {
                          "messageWireId": "0x48",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Trading_Status == H)&($Halt_Reason)"
                            },
                          "end": "Instr.Halted"
                      }
                  ]
              }							  
		]
	  },
      {
          "name": "LSE MITCH life of a displayed anonymous order",
          "description": "This workflow models order book updates for the life of displayed anonymous order.",
          "includeMessages" : [
              {
                  "messageType": ["0x41","0x55","0x41","0x45","0x44"]
              }
            ],
          "states" : [
              {
                  "ref": "Order.New",
                  "description":"An anonymous limit or market order is added to the order book."
              },
              {
                  "ref": "Order.Updated.KeptPriority",
                  "description":"An anonymous limit or market order is updated and keeps its time priority."
              },
              {
                  "ref": "Order.Updated.LostPriority",
                  "description":"An anonymous limit or market order is updated and loses its time priority."
              },				  
              {
                  "ref": "Order.Executed",
                  "description":"Indicates that the displayed portion of an order is fully or partially filled at its displayed price. The executed quantity is included in the message."
              },
              {
                  "ref": "Order.Deleted",
                  "description":"The remainder of a displayed order is cancelled."
              }			  
          ],
          "transitions": [
              {
                  "description": "Displayed anonymous order is entered.",				  
                  "responses": [
                      {
                          "messageWireId": "0x41",
                          "end": "Order.New"
                      }
                  ]
              },
              {
                  "description": "Displayed anomymous Order is updated without losing its time priority",
                  "start": ["Order.New","Order.Updated.KeptPriority","Order.Updated.LostPriority","Order.Executed"],					  
                  "responses": [
                      {
                          "messageWireId": "0x55",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Priority_Flag == 1)"
                            },						  
                          "end": "Order.Updated.KeptPriority"
                      }
                  ]
              },
              {
                  "description": "Displayed anomymous Order is updated and loses its time priority",				  
                  "start": ["Order.New","Order.Updated.KeptPriority","Order.Updated.LostPriority","Order.Executed"],
                  "responses": [
                      {
                          "messageWireId": "0x55",
                          "where": {
                              "expressionType": "jsep",
                              "expression": "($Priority_Flag == 0)"
                            },						  
                          "end": "Order.Updated.KeptPriority"
                      }
                  ]
              },
              {
                  "description": "Displayed anomymous Order is executed",				  
                  "start": ["Order.New","Order.Updated.KeptPriority","Order.Updated.LostPriority","Order.Executed"],
                  "responses": [
                      {
                          "messageWireId": "0x45",				  
                          "end": "Order.Executed"
                      }
                  ]
              },					  
              {
                  "description": "Displayed anomymous Order is deleted",				  
                  "start": ["Order.New","Order.Updated.KeptPriority","Order.Updated.LostPriority","Order.Executed"],
                  "responses": [
                      {
                          "messageWireId": "0x44",				  
                          "end": "Order.Deleted"
                      }
                  ]
              }
 	       ]
  	  }
  ]  
  
}